19.11.2024  
Тема: Выполнение и сопровождение организационных (производственных) задач, разработанных для организации  

База данных (БД) — это организованная структура, предназначенная для хранения, управления и обработки данных.  

Для разработки БД был выбран SQLite в связке с Entity Framework (EF) для языка программирования C#.  
Почему выбран SQLite и EF:  
1. SQLite:  
   - Простая настройка и использование.  
   - Легкий, не требует отдельного сервера.  
   - Подходит для локальных и небольших проектов.  
2. Entity Framework (EF):  
   - Упрощает работу с данными через ORM (Object-Relational Mapping).  
   - Автоматическая генерация SQL-запросов.  
   - Позволяет работать с объектами на уровне кода, что повышает производительность разработки.  

 Структура базы данных  
База данных состоит из следующих таблиц:  
1. Employees (Сотрудники) - Хранит информацию о сотрудниках, включая их должности и подразделения.  
2. Posts (Должности) - Содержит перечень должностей.  
3. Products (Изделия) - Описывает изделия, их серийные номера и места хранения.  
4. Materials (Материалы/Комплектующие) - Учитывает материалы, их количество, стоимость и места хранения.  
5. Locations (Места хранения) - Указывает места хранения и ответственных кладовщиков.  
6. Units (Единицы измерения) - Определяет единицы измерения для изделий и материалов.  
7. Divisions (Подразделения) - Хранит данные о подразделениях предприятия.  
8. Counterparties (Контрагенты) - Включает информацию о контрагентах, их реквизитах и типах.  
9. Contracts (Договора) - Хранит данные о договорах на поставку изделий.  
10. Receipts (Поступления) - Учитывает поступления материалов.  
11. Sales (Реализация) - Указывает на реализацию изделий.  
12. Product_Materials (Изделие-Материалы) - Соединительная таблица для связи изделий с используемыми материалами.  

Связи между таблицами  
- "Один к одному" (1:1):  
  - Пример: *Место хранения - Кладовщик*.  
  - Один объект связан ровно с одним объектом другой таблицы.  =
- "Один ко многим" (1:M):  
  - Пример: *Подразделение - Сотрудники*.  
  - Один объект может быть связан с несколькими объектами другой таблицы.  
- "Многие ко многим" (M:N):  
  - Пример: *Изделие - Материалы*.  
  - Реализуется через промежуточную таблицу (например, *Product_Materials*).  
  - Один объект одной таблицы связан с несколькими объектами другой таблицы и наоборот.  

Разница между типами связей:  
- "1:1" обеспечивает строгое соответствие.  
- "1:M" позволяет одному объекту быть связанным с множеством объектов.  
- "M:N" создает сложные отношения через дополнительную таблицу, чтобы избежать избыточности.  

Приложение И Схема базы данных "Учёт выпуска и реализации продукции ООО «ВакТайм»" включает представление всех таблиц, их атрибутов, а также связей между ними.  