21.04.2025
Тема: Проектирование, кодирование, испытание разрабатываемого модуля.

Назначение и структура класса `BaseReportViewModel<T>`

`BaseReportViewModel<T>` — это абстрактный обобщённый класс, реализующий базовую логику формирования, отображения и печати отчётов в приложении. Является основой для всех специализированных моделей представления (ViewModel) отчётов.
Основные задачи:
- генерация отчёта на основе коллекции данных типа `T`;
- настройка форматирования и параметров документа;
- выполнение печати;
- поддержка группировки данных и вывода промежуточных итогов;
- отображение сообщений пользователю;
- реакция на команды интерфейса (печать, обновление и поворот листа).

Основные компоненты и функциональность

1. Интерфейс `INotifyPropertyChanged`
Позволяет отслеживать изменения в свойствах и обновлять привязанные элементы интерфейса.
2. Работа с данными
- DbSet<T> и ObservableCollection<T> Items — коллекция объектов для отображения и обработки.
- LoadData() — загружает данные из БД в `Items` с использованием Entity Framework.
- OpenFromCache() — метод-заглушка, вызывающий повторную загрузку данных (может использоваться при кэшировании).
3. Формирование документа
- CreateReport() — абстрактный метод, переопределяемый в дочерних классах, где реализуется построение `FlowDocument`.
- Refresh() — вызывает `CreateReport()` и задаёт параметры страницы (формат A4, отступы, отключение колонок).
4. Печать
- PrintReport() — открывает системный диалог печати. Перед печатью документ переводится в чёрно-белый режим и подгоняется под печатную область. После — возвращает оригинальные цвета.
5. Поворот ориентации
- SwapPageDimensions() — меняет местами ширину и высоту страницы (портрет/альбом), что удобно при печати широких таблиц.
6. Сообщения и уведомления
- Message и MessageBrush — позволяют выводить цветовые уведомления (например, при пустом документе).
- StartResetTimer() — автоматически очищает сообщение через 10 секунд после его появления.

Группировка данных
Класс реализует три перегруженных метода `CreateGroupedRows()`, позволяющие формировать таблицы отчёта с разной степенью детализации:

1. Без подсчёта итогов:
   - Формирует строки с заголовком группы и данными.
2. С итоговой суммой по группе:
   - Выводит сумму значений поля (например, общая стоимость по каждому складу).
3. С подсчётом суммы и количества:
   - Подходит для отчётов, где важно видеть не только сумму, но и количество (например, объём продаж по подразделениям).

Каждый метод принимает:
- селектор группировки (`keySelector`);
- функции форматирования строк;
- ссылки на `TableRowGroup` и итоговую сумму;
- флаг `IsGroupTotalEnabled`.

Пример использования:  
Печать поступлений, сгруппированных по складу, с выводом количества и общей суммы — реализуется через третью перегрузку `CreateGroupedRows`.

Форматирование документа
Созданный `FlowDocument` имеет:
- размер страницы: A4 (793.7 × 1122.52 px при 96 DPI);
- отступы: 50 px со всех сторон;
- отключённую разбивку на колонки (`ColumnWidth = double.PositiveInfinity`);
- стиль печати: чёрно-белый, с возможностью настройки вручную.